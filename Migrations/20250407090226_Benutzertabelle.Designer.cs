// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestBlazorAPP.Database;

#nullable disable

namespace TestBlazorAPP.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250407090226_Benutzertabelle")]
    partial class Benutzertabelle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ToDo")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestBlazorAPP.Models.Aufgabe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Geloescht")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prioritaet")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Aufgabe", "ToDo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Geloescht = false,
                            Name = "Testaufgabe",
                            Prioritaet = 1
                        });
                });

            modelBuilder.Entity("TestBlazorAPP.Models.Benutzer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Benutzer", "ToDo");
                });

            modelBuilder.Entity("TestBlazorAPP.Models.Bild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AufgabeId")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AufgabeId")
                        .IsUnique();

                    b.ToTable("Bild", "ToDo");
                });

            modelBuilder.Entity("TestBlazorAPP.Models.Bild", b =>
                {
                    b.HasOne("TestBlazorAPP.Models.Aufgabe", "Aufgabe")
                        .WithOne("Bild")
                        .HasForeignKey("TestBlazorAPP.Models.Bild", "AufgabeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Aufgabe");
                });

            modelBuilder.Entity("TestBlazorAPP.Models.Aufgabe", b =>
                {
                    b.Navigation("Bild");
                });
#pragma warning restore 612, 618
        }
    }
}
